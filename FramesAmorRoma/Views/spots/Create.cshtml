@model FramesAmorRoma.Models.spot

@{
    ViewBag.Title = "Create";
}

<h2>Add a new spot!</h2>


@using (Html.BeginForm("create", "spots", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
        
    <div class="form-horizontal d-flex w-75">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div>
        <div class="form-group ">

            @Html.LabelFor(model => model.locationName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.locationName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.locationName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.describtion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.describtion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.describtion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Locationaddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Locationaddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Locationaddress, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div>

        <div class="form-group">
            @Html.LabelFor(model => model.spotIMG, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("locationIMG", "", htmlAttributes: new { @class = "form-control", @type = "file" })
                @Html.ValidationMessageFor(model => model.spotIMG, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.spot1img, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("locationIMG1", "", htmlAttributes: new { @class = "form-control", @type = "file" })
                @Html.ValidationMessageFor(model => model.spot1img, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.spot2img, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("locationIMG2", "", htmlAttributes: new { @class = "form-control", @type = "file" })
                @Html.ValidationMessageFor(model => model.spot2img, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.spot3img, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("locationIMG3", "", htmlAttributes: new { @class = "form-control", @type = "file" })
                @Html.ValidationMessageFor(model => model.spot3img, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
